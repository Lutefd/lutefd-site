---
import { ViewTransitions, fade } from "astro:transitions";
import "@fontsource-variable/jetbrains-mono";
import Link from "@/components/Link";
type Props = {
  title: string;
  formattedTitle?: string;
  description: string;
  image?: string;
};
const { pathname } = Astro.url;
const { title, description, image, formattedTitle } = Astro.props;

let href = "instanciated";

if (pathname === "/blog" || pathname === "/blog/") {
  href = "/";
} else if (pathname.startsWith("/blog/")) {
  href = "/blog";
} else {
  href = "/";
}
const isWork = pathname === "/work" || pathname.startsWith("/work/");
if (pathname === "/work" || pathname === "/work/") {
  href = "/";
} else if (pathname.startsWith("/work/")) {
  href = "/work";
} else {
  href = "/";
}
const isJam = pathname === "/jam" || pathname.startsWith("/jam/");
if (pathname === "/jam" || pathname === "/jam/") {
  href = "/";
} else if (pathname.startsWith("/jam/")) {
  href = "/jam";
} else {
  href = "/";
}
---

<html lang="en">
  <head>
    <ViewTransitions transition:animate={fade({ duration: "0.3s" })} } />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{formattedTitle ? formattedTitle : title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={"https://luisdourado.com/"} />
    <meta property="og:site_name" content="Luis Dourado" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={image} />}
    {image && <meta property="og:image:width" content={"300"} />}
    {image && <meta property="og:image:height" content={"300"} />}
    <link
      rel="alternate"
      type="application/rss+xml"
      title={title}
      href={Astro.site + "/feed.xml"}
    />
  </head>

  <body
    class="min-h-screen max-w-4xl w-full mx-auto flex flex-col items-center justify-center max-h-[calc(100vh-5rem)] max-sm:px-[1rem]"
  >
    <div
      class="md:mx-auto bg-white min-h-[calc(100vh-5rem)] border-[1px] border-black"
    >
      <header class="border-b-[0.5px] border-black">
        <div
          class="px-4 h-10 flex items-center pt-5 pb-5 justify-between group"
        >
          <slot name="header-content">
            <Link {href}>‚Üê back</Link>
          </slot>
          <nav class="">
            {
              isWork ? (
                <a href="/" class="text-md hover:underline underline-offset-4">
                  Home
                </a>
              ) : (
                <a
                  href="/work"
                  class="text-md hover:underline underline-offset-4 whitespace-nowrap"
                  set:html="Work"
                />
              )
            }
            <a
              href="https://cal.com/lutefd/"
              target="_blank"
              class="text-md whitespace-nowrap hover:underline underline-offset-4"
            >
              Contact</a
            >
            {
              isJam ? (
                <a href="/" class="text-md hover:underline underline-offset-4">
                  Home
                </a>
              ) : (
                <a
                  href="/jam"
                  class="text-md hover:underline underline-offset-4 whitespace-nowrap"
                  set:html="Jam"
                />
              )
            }
          </nav>
        </div>
      </header>
      <div class="px-4 pt-5 max-h-[calc(100vh-2px-7.5rem)] overflow-y-auto">
        <slot />
      </div>
    </div>
    <script>
      import { loglib } from "@loglib/tracker";
      loglib.record({
        id: "luisdourado",
      });
    </script>
    <script is:inline>
      const theme = "light";

      function setTheme(theme) {
        if (theme === "light") {
          document.documentElement.classList.remove("dark");
        } else {
          document.documentElement.classList.add("dark");
        }
        if (typeof localStorage !== "undefined")
          localStorage.setItem("theme", theme);
      }

      setTheme(theme);

      document.addEventListener("astro:after-swap", () => setTheme(theme));
    </script>

    <style is:global>
      body {
        font-family: "JetBrains Mono", monospace;
        background: url('data:image/svg+xml;utf8,<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse"><path d="M 80 0 L 0 0 0 80" fill="none" stroke="gray" stroke-width="0.5"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grid)" /></svg>')
          white;
      }
    </style>
  </body>
</html>
